<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>:(</title>
    <style>
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #map {
        height: 100%;
      }
    </style>
    <script>

      var map;
      var infoWindow;
      var service;
      var crd;
      var tal;
      // tal = parseInt(tal);
      var gnl;
      // tal = parseInt(gnl);

      var options = {
  		enableHighAccuracy: true,
  		timeout: 5000,
  		maximumAge: 0
	  };

	navigator.geolocation.getCurrentPosition(success, error, options);
	function success(pos) {
    crd = pos.coords;
    console.log(crd);
    // return crd;
    // tal = crd.latitude;
    var tal = parseInt(crd.latitude);
    // gnl = crd.longitude;
    var gnl = parseInt(crd.longitude);
    console.log(gnl);
    console.log(tal);
    return tal;
    return gnl;
	};

  console.log(gnl);
  console.log(tal);

	function error(err) {
	  console.warn('ERROR(' + err.code + '): ' + err.message);
	};

  function initMap() {
		navigator.geolocation.getCurrentPosition(success, error, options)
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: tal, lng: gnl},
          zoom: 14,
          radius: 100,
          styles: [{
            stylers: [{ visibility: 'simplified' }]
          }, {
            elementType: 'labels',
            stylers: [{ visibility: 'off' }]
          }]
        });

        var cityCircle = new google.maps.Circle({
          strokeColor: '#fff',
          strokeOpacity: 0.8,
          strokeWeight: 2,
          fillColor: '#fff',
          fillOpacity: 0.35,
          map: map,
          center: {lat: tal, lng: gnl},
          radius: 16093,
        });

        infoWindow = new google.maps.InfoWindow();
        service = new google.maps.places.PlacesService(map);
        // The idle event is a debounced event, so we can query & listen without
        // throwing too many requests at the server.
        map.addListener('idle', performSearch);
        map.addListener('idle', performSearch1);
      }

      function performSearch() {
        var request = {
          bounds: map.getBounds(),
          keyword: 'hospital',
        };
        service.radarSearch(request, callback);
      }

      function performSearch1() {
        var request = {
          bounds: map.getBounds(),
          keyword: 'police',
        };
        service.radarSearch(request, callback);
      }

      function callback(results, status) {
        if (status !== google.maps.places.PlacesServiceStatus.OK) {
          console.error(status);
          return;
        }

        var marker = new google.maps.Marker({
          position: {lat: tal, lng: gnl},
          map: map,
          title: 'You are here'
        });

        marker.setMap(map);

        for (var i = 0, result; result = results[i]; i++) {
        //   addMarker(result);
        //   var dist = google.maps.geometry.spherical.computeDistanceBetween(obj.geometry.location.lat(result) , crd);
        //   console.log(dist);
        // if (dist <= 100){
          addMarker(result);
          }
        }

      function addMarker(place) {
        var marker = new google.maps.Marker({
          map: map,
          position: place.geometry.location,
          icon: {
            url: 'http://maps.gstatic.com/mapfiles/circle.png',
            anchor: new google.maps.Point(10, 10),
            scaledSize: new google.maps.Size(10, 17)
          }
        });

        google.maps.event.addListener(marker, 'click', function() {
          service.getDetails(place, function(result, status) {
            if (status !== google.maps.places.PlacesServiceStatus.OK) {
              console.error(status);
              return;
            }
            infoWindow.setContent(result.name);
            infoWindow.open(map, marker);
          });
        });
      }
    </script>
  </head>
  <body>
    <div id="map"></div>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA2tEZYe153X0mjpEFdgjViaH46lPasUMg&callback=initMap&libraries=places,visualization" async defer></script>
  </body>
</html>/